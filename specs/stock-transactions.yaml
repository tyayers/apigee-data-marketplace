openapi: 3.0.0
info:
  title: Stock Transaction API
  description: This API provides access to stock trading transaction data.
  version: 1.0.0
servers:
  - url: https://api.34-110-134-67.nip.io
security:
  - ApiKeyAuth: []
paths:
  /stocks:
    get:
      description: Get a list of all stocks.
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Stock'
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      tags:
        - stocks
    post:
      description: Creates a new stock.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
        description: Stock object that needs to be added to the store
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid stock supplied
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Stock already exists
      summary: Create a new stock.
      tags:
        - stocks
  /stocks/{stockId}:
    delete:
      description: Delete a specific stock by its unique identifier.
      operationId: deleteStock
      responses:
        '200':
          description: Stock deleted successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Stock not found.
      summary: Delete a specific stock.
      tags:
        - stocks
    get:
      description: >-
        This endpoint retrieves the details of a specific stock by its unique
        identifier.
      operationId: getStockById
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Successful operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Stock not found.
      summary: Get the details of a specific stock.
      tags:
        - stocks
    parameters:
      - description: The unique identifier of the stock.
        in: path
        name: stockId
        required: true
        schema:
          type: string
    put:
      operationId: updateStock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
        description: The stock details to update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: The updated stock details.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Stock not found.
      summary: Update the details of a specific stock.
      tags:
        - stocks
  /stocks/{stockId}/transactions:
    get:
      description: Returns a list of all transactions for a specific stock.
      operationId: getStockTransactions
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction'
                type: array
          description: Successful operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Stock not found.
      summary: Get a list of all transactions for a specific stock.
      tags:
        - stocks
    parameters:
      - description: The unique identifier of the stock.
        in: path
        name: stockId
        required: true
        schema:
          type: string
  /transactions:
    get:
      description: Get a list of all transactions.
      operationId: getTransactions
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction'
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      tags:
        - transactions
    post:
      description: Creates a new transaction.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create a new transaction
      tags:
        - transactions
  /transactions/{transactionId}:
    delete:
      operationId: deleteTransaction
      responses:
        '200':
          description: The transaction was deleted successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The transaction was not found.
      summary: Delete a specific transaction.
      tags:
        - transactions
    get:
      description: This endpoint returns the details of a specific transaction.
      operationId: getTransactionById
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: The details of the transaction.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The transaction was not found.
      summary: Get the details of a specific transaction.
      tags:
        - transactions
    parameters:
      - description: The unique identifier of the transaction.
        in: path
        name: transactionId
        required: true
        schema:
          type: string
    put:
      operationId: updateTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        description: The updated transaction details.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: The updated transaction details.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified transaction was not found.
      summary: Update the details of a specific transaction.
      tags:
        - transactions
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: apikey
      in: query
  schemas:
    Error:
      description: Error object
      properties:
        message:
          description: The error message
          type: string
      type: object
    Stock:
      description: A stock represents a publicly traded company.
      properties:
        name:
          description: The name of the stock.
          type: string
        price:
          description: The current price of the stock.
          type: number
        stockId:
          description: The unique identifier of the stock.
          type: string
        symbol:
          description: The stock symbol.
          type: string
      type: object
    Transaction:
      description: A transaction represents a trade of a stock.
      properties:
        CFICode:
          description: The CFICode of the transaction.
          type: string
        LastPx:
          description: The last price of the transaction.
          type: string
        MaturityDate:
          description: The maturity date of the transaction.
          type: string
        OrderID:
          description: The unique order identifier of the transaction.
          type: string
        Quantity:
          description: The quantity of the transaction.
          type: string
        SenderCompID:
          description: The SenderCompID of the transaction.
          type: string
        SendingTime:
          description: The SendingTime of the transaction.
          type: string
        StrikePrice:
          description: The StrikePrice of the transaction.
          type: string
        Symbol:
          description: The symbol of the stock.
          type: string
        TargetCompID:
          description: The unique identifier of the comp transaction.
          type: string
        TradeDate:
          description: The trade date of the transaction.
          type: string
        TradeReportId:
          description: The unique identifier of the trade report.
          type: string
        TransactTime:
          description: The transaction time.
          type: string
      type: object
